version: "3.9"
services:
  # Databases
  books_db:
    image: postgres:12-alpine
    container_name: books-database
    ports:
      - "5432:5432"
    volumes:
      - ./data/books_db:/var/lib/postgresql/data
      - ./utils/init-books_db.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: book

  customers_db:
    image: postgres:12-alpine
    container_name: customers-database
    ports:
      - "5433:5432"
    volumes:
      - ./data/customers_db:/var/lib/postgresql/data
      - ./utils/init-customers_db.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: customer

  borrowings_db:
    image: mongo:latest
    container_name: borrowings_db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: borrowings_db
    ports:
      - 27017:27017
    volumes:
      - ./data/borrowings_db:/data/db

  # Microservices
  books-ms:
    image: albjzan/books-ms:1.0-SNAPSHOT
    environment:
      NODE_ENV: production
      SERVER_PORT: 8081
      DB_HOST: books_db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: book
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPIC_NAME: notify
    container_name: books-ms
    ports:
      - "8081:8081"
    depends_on:
      - books_db
      - zookeeper
      - kafka
  customers-ms:
    image: albjzan/customers-ms:1.0-SNAPSHOT
    environment:
      NODE_ENV: production
      SERVER_PORT: 8082
      DB_HOST: customers_db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: customer
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPIC_NAME: notify
    container_name: customers-ms
    ports:
      - "8082:8082"
    depends_on:
      - customers_db
      - zookeeper
      - kafka
  borrowing-ms:
    image: albjzan/borrowing-ms:1.0-SNAPSHOT
    environment:
      BOOKS_MS_HOST: books-ms
      BOOKS_MS_PORT: 8081
      CUSTOMERS_MS_HOST: customers-ms
      CUSTOMERS_MS_PORT: 8082
      NODE_ENV: development
      SERVER_PORT: 8083
      DB_URI: mongodb://root:root@borrowings_db:27017
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPIC_NAME: notify
    container_name: borrowing-ms
    ports:
      - "8083:8083"
    depends_on:
      - borrowings_db
      - customers-ms
      - books-ms
      - zookeeper
      - kafka

  # Kafka config
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    ports:
      - "19092:19092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # kafka have to talk with other containers (kafka name) and also from my local environment (localhost)
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,CONNECTIONS_FROM_HOST://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT
